@ File generated by CompCert 2.4
@ Command line:
	.syntax	unified
	.arch	armv7-a
	.fpu	vfpv3-d16
	.arm
	.text
	.balign 4
	.global	viola_main_vib_ic
viola_main_vib_ic:
	.cfi_startproc
	mov	r12, sp
	sub	sp, sp, #40
	.cfi_adjust_cfa_offset	40
	str	r12, [sp, #36]
	str	lr, [sp, #32]
	.cfi_rel_offset	lr, 32
	str	r4, [sp, #0]
	str	r5, [sp, #4]
	str	r6, [sp, #8]
	str	r7, [sp, #12]
	str	r8, [sp, #16]
	str	r9, [sp, #20]
	str	r10, [sp, #24]
	str	r11, [sp, #28]
	ldrb	r12, [r2, #0]
	ldrb	r6, [r2, #1]
	ldrb	r3, [r2, #2]
	cmp	r12, #5
	bne	.L100
	cmp	r6, #84
	ite	eq
	moveq	r12, #1
	movne	r12, #0
	cmp	r6, #85
	ite	eq
	moveq	r4, #1
	movne	r4, #0
	cmp	r6, #88
	ite	eq
	moveq	r9, #1
	movne	r9, #0
	cmp	r6, #92
	ite	eq
	moveq	r2, #1
	movne	r2, #0
	cmp	r6, #96
	ite	eq
	moveq	r5, #1
	movne	r5, #0
	cmp	r6, #80
	ite	eq
	moveq	r8, #1
	movne	r8, #0
	cmp	r6, #116
	ite	eq
	moveq	r7, #1
	movne	r7, #0
	orr	r6, r8, r7
	orr	r6, r5, r6
	orr	r6, r2, r6
	orr	r6, r9, r6
	orr	r6, r4, r6
	orr	r6, r12, r6
	cmp	r6, #0
	beq	.L101
	and	r3, r3, #255
	cmp	r3, #7
	ite	eq
	moveq	r6, #1
	movne	r6, #0
	and	r12, r12, r6
	and	r6, r12, #1
	ldrb	r12, [r0, #2]
	and	r12, r12, #255
	cmp	r12, #0
	ite	eq
	moveq	r12, #1
	movne	r12, #0
	orr	r10, r12, #1
	and	r6, r6, r10
	ldrb	r12, [r0, #84]
	and	r12, r12, #255
	cmp	r12, #7
	ite	eq
	moveq	r12, #1
	movne	r12, #0
	orr	r12, r6, r12
	cmp	r3, #32
	ite	eq
	moveq	r6, #1
	movne	r6, #0
	and	r4, r4, r6
	and	r4, r4, #1
	and	r6, r4, r10
	ldrb	r4, [r0, #85]
	and	r4, r4, #255
	cmp	r4, #32
	ite	eq
	moveq	r4, #1
	movne	r4, #0
	orr	r4, r6, r4
	cmp	r3, #1
	ite	eq
	moveq	r6, #1
	movne	r6, #0
	and	r9, r9, r6
	and	r9, r9, #1
	and	r11, r9, r10
	ldrb	r9, [r0, #88]
	and	r9, r9, #255
	cmp	r9, #1
	ite	eq
	moveq	r9, #1
	movne	r9, #0
	orr	r9, r11, r9
	cmp	r3, #129
	ite	eq
	moveq	r11, #1
	movne	r11, #0
	and	r2, r2, r11
	and	r2, r2, #1
	and	r11, r2, r10
	ldrb	r2, [r0, #92]
	and	r2, r2, #255
	cmp	r2, #129
	ite	eq
	moveq	r2, #1
	movne	r2, #0
	orr	r2, r11, r2
	cmp	r3, #49
	ite	eq
	moveq	r3, #1
	movne	r3, #0
	and	r3, r5, r3
	and	r3, r3, #1
	and	r5, r3, r10
	ldrb	r3, [r0, #96]
	and	r3, r3, #255
	cmp	r3, #49
	ite	eq
	moveq	r3, #1
	movne	r3, #0
	orr	r3, r5, r3
	and	r5, r8, r6
	and	r5, r5, #1
	and	r8, r5, r10
	ldrb	r5, [r0, #80]
	and	r5, r5, #255
	cmp	r5, #1
	ite	eq
	moveq	r5, #1
	movne	r5, #0
	orr	r5, r8, r5
	and	r6, r7, r6
	and	r6, r6, r10
	ldrb	r0, [r0, #116]
	and	r0, r0, #255
	cmp	r0, #1
	ite	eq
	moveq	r0, #1
	movne	r0, #0
	orr	r0, r6, r0
	and	r0, r0, #1
	and	r0, r5, r0
	and	r3, r3, r0
	and	r2, r2, r3
	and	r2, r9, r2
	and	r3, r4, r2
	and	r0, r12, r3
	ldrb	r2, [r1, #193]
	and	r12, r2, #2
	mov	r12, r12, lsr #1
	cmp	r12, #1
	ite	eq
	moveq	r2, #1
	movne	r2, #0
	ldrb	r1, [r1, #196]
	and	r1, r1, #255
	cmp	r1, #2
	ite	eq
	moveq	r1, #1
	movne	r1, #0
	and	r3, r1, #1
	and	r1, r2, r3
	eor	r2, r1, #1
	and	r0, r0, r2
	cmp	r0, #0
	beq	.L101
	mov	r0, #196608
	b	.L102
.L100:
	cmp	r12, #6
	bne	.L101
	cmp	r6, #193
	ite	eq
	moveq	r2, #1
	movne	r2, #0
	cmp	r6, #196
	ite	eq
	moveq	r12, #1
	movne	r12, #0
	orr	r4, r2, r12
	cmp	r4, #0
	beq	.L101
	and	r4, r3, #2
	mov	r4, r4, lsr #1
	cmp	r4, #1
	ite	ne
	movne	r4, #1
	moveq	r4, #0
	and	r2, r2, r4
	and	r4, r2, #1
	ldrb	r2, [r1, #193]
	and	r2, r2, #2
	mov	r2, r2, lsr #1
	cmp	r2, #1
	ite	eq
	moveq	r2, #1
	movne	r2, #0
	and	r4, r4, r2
	and	r4, r4, r2
	and	r2, r3, #255
	cmp	r2, #2
	ite	ne
	movne	r2, #1
	moveq	r2, #0
	and	r3, r12, r2
	and	r12, r3, #1
	ldrb	r1, [r1, #196]
	and	r3, r1, #255
	cmp	r3, #2
	ite	eq
	moveq	r3, #1
	movne	r3, #0
	and	r12, r12, r3
	and	r2, r12, r3
	orr	r4, r4, r2
	ldrb	r12, [r0, #84]
	and	r1, r12, #255
	cmp	r1, #7
	ite	eq
	moveq	r5, #1
	movne	r5, #0
	ldrb	r1, [r0, #85]
	and	r2, r1, #255
	cmp	r2, #32
	ite	eq
	moveq	r6, #1
	movne	r6, #0
	ldrb	r1, [r0, #88]
	and	r1, r1, #255
	cmp	r1, #1
	ite	eq
	moveq	r7, #1
	movne	r7, #0
	ldrb	r1, [r0, #92]
	and	r1, r1, #255
	cmp	r1, #129
	ite	eq
	moveq	r8, #1
	movne	r8, #0
	ldrb	r1, [r0, #96]
	and	r1, r1, #255
	cmp	r1, #49
	ite	eq
	moveq	r9, #1
	movne	r9, #0
	ldrb	r12, [r0, #80]
	and	r12, r12, #255
	cmp	r12, #1
	ite	eq
	moveq	r3, #1
	movne	r3, #0
	ldrb	r12, [r0, #116]
	and	r12, r12, #255
	cmp	r12, #1
	ite	eq
	moveq	r12, #1
	movne	r12, #0
	and	r1, r12, #1
	and	r2, r3, r1
	and	r1, r9, r2
	and	r3, r8, r1
	and	r0, r7, r3
	and	r2, r6, r0
	and	r3, r5, r2
	and	r0, r4, r3
	cmp	r0, #0
	beq	.L101
	mov	r0, #196608
	b	.L102
.L101:
	mov	r0, #0
.L102:
	ldr	r4, [sp, #0]
	ldr	r5, [sp, #4]
	ldr	r6, [sp, #8]
	ldr	r7, [sp, #12]
	ldr	r8, [sp, #16]
	ldr	r9, [sp, #20]
	ldr	r10, [sp, #24]
	ldr	r11, [sp, #28]
	ldr	lr, [sp, #32]
	add	sp, sp, #40
	bx	lr
	.balign	4
	.cfi_endproc
	.type	viola_main_vib_ic, %function
	.size	viola_main_vib_ic, . - viola_main_vib_ic
